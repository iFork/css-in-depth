:root {
  box-sizing: border-box;
}
*,
:before,
:after {
  box-sizing: inherit;
}

body {
  font-family: Raleway, Arial, sans-serif;
  line-height: 1.4;
  margin: 0;
  color: white;
  background-color: hsl(210, 80%, 20%);
  background-image: radial-gradient(
    hsl(210, 80%, 30%), hsl(210, 80%, 20%));
  min-height: 100vh;
}

main {
  margin: 0 5em;
}

h1, h2, h3 {
  font-family: 'Alfa Slab One', serif;
}


/* Objects */

.row {
  display: flex;
  margin: 3em;
  border: 2px solid hsl(210, 10%, 90%);
}

.card {
  background-color: white;
  color: black;
  max-width: 300px;
  padding: .4em;
  box-shadow: .2em .5em 1em rgba(0, 0, 0, .6);
}
.card + .card {
  margin-top: 1em;
}
.card > img {
  width: 100%;
}

.box {
  width: 50px;
  height: 50px;
  background-color: hsl(30, 80%, 40%);
  box-shadow: 0 0 .7em .2em hsla(90, 30%, 80%, .5);
  margin: 1em;
}

.form {
  background-color: white;
  color: black;
  max-width: 500px;
  min-width: 300px;
  padding: 1em;
  margin: 0 auto;
  border-radius: .2em;
  box-shadow: .2em .3em 5px rgba(0, 0, 0, .6);
}

.form__block + .form__block {
  margin-top: 1em;
}
.form__block > * {
  display: block;
}

.form__block > * + * {
  margin-top: .5em;
}

.form__block textarea {
  width: 100%;
  min-width: 300px;
  max-width: 100%;
  min-height: 3em;
  font: inherit;
}


.button {
  background-color: hsl(210, 50%, 50%);
  color: white;
  padding: .5em 1em;
  border: none;
  transition: background-color .3s linear;
}
.button:hover {
  background-color: hsl(210, 45%, 40%);
}
.button:disabled {
  background-color: hsl(210, 15%, 75%);
}

.button.is-loading {
  color: transparent;
  position: relative; 
}
.button.is-loading::before {
  content: "";
  border-top: 2px solid white;
  border-radius: 50%;
  width: 1.4em;
  height: 1.4em;
  position: absolute;
  /* center spinner. 
   * Can do the same w/ negative margins */
  top: calc(50% - .7em); /* NOTE: remember space around `-` minus sign */
  left: calc(50% - .7em);
  animation: spin .6s linear infinite;
}

/* Components */

.page-header {
  margin: 0;
  padding: 1rem;
}
@media (min-width: 30em) {
  .page-header {
    padding: 2rem 2rem 3rem;
  }

}

.main-nav {
  padding: 0 1rem;
}
@media (min-width: 30em) { /* 480px */
  .main-nav {
    position: fixed;
    top: 8.25rem;
    left: 0;
    padding: 1em;
    border-top-right-radius: .5em;
    border-bottom-right-radius: .5em;
    transition: background-color .5s linear;
  }
  .main-nav:hover {
    background-color: rgba(0, 0, 0, .6);
  }
}

.nav-links {
  display: flex;
  justify-content: space-between;
  list-style-type: none;
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 1rem;
}
.nav-links li + li {
  margin-left: .8em;
}
.nav-links a {
  display: block;
  padding: .8em 0;
  color: white;
  text-decoration: none;
}
.nav-links a:hover {
  color: hsl(40, 100%, 70%);
}
@media (min-width: 30em) {
  .nav-links {
    display: block;
    margin-bottom: 0;
  }
  .nav-links li + li {
    margin-left: 0;
  }
}

.nav-links__icon {
  width: 1.5em;
  height: 1.5em;
  vertical-align: -.2em; /* move down to center w/ text */
}
.nav-links__label {
  text-transform: uppercase;
  letter-spacing: .06em;
  font-size: .8rem;
}
@media (min-width: 30em) {
  .nav-links__icon {
    transition: transform .2s ease-out;
  }
  .nav-links a:hover .nav-links__icon,
  .nav-links a:focus .nav-links__icon {
    transform: scale(1.3);
  }
  .nav-links__label {
    display: inline-block; /* NOTE: to be able to subject to transforms */
    margin-left: 1em;
    transform: translate(-1em);
    opacity: 0;
    transition: transform .4s cubic-bezier(0.2, 0.9, 0.3, 1.3), /* overshoot */
                opacity .4s linear;
  }
  .nav-links:hover .nav-links__label,
  .nav-links a:focus .nav-links__label {
    transform: translate(0);
    opacity: 1;
  }
  /* staggering transitions */
  .nav-links li:nth-child(2) .nav-links__label {
    transition-delay: .1s;
  }
  .nav-links li:nth-child(3) .nav-links__label {
    transition-delay: .2s;
  }
  .nav-links li:nth-child(4) .nav-links__label {
    transition-delay: .3s;
  }
  .nav-links li:nth-child(5) .nav-links__label {
    transition-delay: .4s;
  }
  .nav-links li:nth-child(6) .nav-links__label {
    transition-delay: .5s;
  }
}

.flyin-grid {
  margin: 0 1rem;
}
@media (min-width: 30em) {
  .flyin-grid {
    display: flex;
    flex-wrap: wrap;
    margin: 0 5rem; /* increase padding accounting for fixed menu */
  }
  .flyin-grid__item {
    margin: .5em;
    flex: 1 1 300px;
    max-width: 600px;
  }
  .flyin-grid__item + .flyin-grid__item {
    margin-top: .5em; /* override card margin */
  }

  @supports (display: grid) {
    .flyin-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2em;
      perspective: 500px;
    }
    .flyin-grid__item {
      margin: 0; /* override fallback margins */
      max-width: initial; /* reset fallback (flexbox) declaration */
      animation: fly-in .6s ease-in;
      animation-fill-mode: backwards;
    }
    .flyin-grid__item + .flyin-grid__item {
      margin-top: 0; /* override fallback margin */
    }
    .flyin-grid__item:nth-child(2) {
      animation-delay: .15s;
    }
    .flyin-grid__item:nth-child(3) {
      animation-delay: .3s;
    }
    .flyin-grid__item:nth-child(4) {
      animation-delay: .45s;
    }
    .flyin-grid__item:nth-child(5) {
      animation-delay: .6s;
    }
    .flyin-grid__item:nth-child(6) {
      animation-delay: .75s;
    }
  }
}

.scene {
  perspective: 700px;
  width: 300px;
  min-height: 300px;
}

.card-two-sided {
  position: relative;
  transition: transform .4s ease-out .1s;
  /* Children to maintain their position in 3D space */
  transform-style: preserve-3d;
}
.scene:hover .card-two-sided {
  transform: rotateY(180deg);
}
.card-two-sided__face {
  position: absolute;
  background-color: white;
  color: black;
  padding: .4em;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}
.card-two-sided__face > img {
  width: 100%;
}

.card-two-sided__face--back {
  transform: rotateY(180deg);
}

/* Utility classes */

.blur {
  position: relative;
  filter: blur(4px);
}
.blur::after {
  position: absolute;
  content:  "";
  display: block;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: hsla(210, 80%, 20%, .2);
}

.rotate {
  transform: rotate(15deg);
}
.rotate--corner {
  transform-origin: bottom right;
}

.scale-down {
  transform: scale(.8);
}
.scale-down--corner {
  transform-origin: top right;
}

.skew {
  transform: skew(15deg);
}
.skew--left {
  transform-origin: top left;
}
.skew--left-center {
  transform-origin: left center;
}

/* order of chained transforms - from right to left */
.topple--rotate-shift {
  transform: translate(1em, 0) rotate(45deg);
}
.topple--shift-rotate {
  transform: rotate(45deg) translate(1em, 0);
}

/* 3D transforms */
.pitch-back {
  /* transform: rotateX(30deg) perspective(100px); */
  /* NOTE: When perspective is applied directly to the element (as a function,
   * not as a property for its children) apply perspective after rotating
   * (i.e. put lefter) */
  transform: perspective(100px) rotateX(30deg); 
}
.pitch-forward {
  transform: perspective(100px) rotateX(-30deg);
}

.yaw-left {
  transform:  perspective(70px) rotateY(30deg);
}
.yaw-right {
  transform:  perspective(70px) rotateY(-30deg);
}

.flip {
  transform: rotateY(180deg);
}
.flip--back-visible {
  backface-visibility: visible;
}


.share-perspective {
  perspective: 200px;
}
.share-perspective--from-bottom-corner {
  /* perspective-origin: left bottom ; */
  perspective-origin: -10% 200% ;
}

.pitch-back-no-own-perspective {
  transform: rotateX(30deg); 
}
.pitch-forward-no-own-perspective {
  transform: rotateX(-30deg);
}

.yaw-left-no-own-perspective {
  transform: rotateY(30deg);
}
.yaw-right-no-own-perspective {
  transform: rotateY(-30deg);
}

.pull-closer {
  transform: translateZ(50px);
}
.push-further {
  transform: translateZ(-100px);
}

.transition-transfer {
  transition: transform .2s linear;
}
.transition-transfer:hover {
  transform: translate(0,0) rotate(0deg); 
}

.animate-contrived-over-and-back {
  /* animation: contrived-over-and-back .3s linear 0s 3; */
  animation-name: contrived-over-and-back;
  animation-duration: 1.5s;
  animation-timing-function: linear;
  animation-iteration-count: 3;
}

.shake {
  animation: shake .5s linear;
}


@keyframes contrived-over-and-back {
  0% {
    background-color: hsl(0, 50%, 50%);
    transform: translate(0);
  }
  50% {
    background-color: hsl(0, 50%, 50%);
    transform: translate(10px, 20px);
  }
  100% {
    background-color: hsl(270, 50%, 90%);
    transform: translate(0);
  }
}

@keyframes fly-in {
  0% {
    opacity: 0;
    transform: translateZ(-800px) rotateY(90deg);
    /* backface-visibility: hidden; has no effect till 90deg */
  }
  56% {
    opacity: 1;
    transform: translateZ(-160px) rotateY(70deg);
  }
  100% {
    transform: translateY(0) rotateY(0);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes shake {
  0% {
    transform: translate(4px);
  }
  25% {
    transform: translate(-4px);
  }
  50% {
    transform: translate(4px);
  }
  75% {
    transform: translate(-4px);
  }
  100% {
    transform: translate(0);
  }
}

