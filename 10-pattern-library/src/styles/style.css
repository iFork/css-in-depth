:root {
  box-sizing: border-box;
}
*,
::before,
::after {
  box-sizing: inherit;
}

body {
  font-family: Helvetica, Arial, sans-serif;
}

/**
 * Media
 *
 * Display an image on the left and body content on the right.
 *
 * Markup: media.html
 *
 * Styleguide Media
 */
.media {
  padding: 1.5em;
  border-radius: .5em;
  background-color: #eee;
}
.media::after {
  content: "";
  display: block;
  clear: both;
}
.media__image {
  float: left;
  margin-right: 1.5em;
}
.media__body {
  overflow: auto; /* make block formatting context */
  margin-top: 0;
}
.media__body > h4 {
  margin-top: 0;
}

/**
 * Button
 *
 * Buttons are available in number of sizes and colors.
 * You can mix and match any color with any size.
 *
 * Markup: button.html
 *
 * .button--success - A green success button
 * .button--danger  - A red danger button
 * .button--large   - A large button
 * .button--small   - A small button
 *
 * Styleguide Button
 */
.button {
  border: 1px solid #265559;
  padding: 1em 1.25em;
  background-color: transparent;
  border-radius: .2em;
  color: #333;
  font-weight: bold;
  font-size: .8rem;
}

.button--success {
  border-color: #cfe8c9;
  background-color: #2f5926;
  color: white;
}
.button--danger {
  border-color: #e8c9c9;
  background-color: #a92323;
  color: white;
}

.button--large {
  font-size: 1.2rem;
}
.button--small {
  font-size: .8rem;
}

/**
 * Dropdown
 *
 * A dropdown menu. Clicking the toggle button opens and closes the drawer.
 *
 * Use JavaScript to toggle `is-open` class in order to open and close the
 * dropdown.
 *
 * Markup: dropdown.html
 *
 * Styleguide Dropdown
 */
.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown__toggle {
  background-color: #eee;
  border: 1px solid #ccc;
  padding: .5em 2em .5em 1.5em;
}
.dropdown__toggle::after {
  content: " ";
  position: absolute;
  top: 1em;
  right: 1em;
  border: .3em solid;
  border-color: black transparent transparent;
}
.dropdown.is-open .dropdown__toggle::after {
  top: .7em;
  border-color: transparent transparent black;
}

.dropdown__drawer {
  display: none;
  position: absolute;
  top: 2.1em;
  background-color: #eee;
  /* set min width in relation to its parent element i.e. .dropdown
   * NOTE:
   * Seems to set its width not in relation to its direct parent i.e. .dropdown
   * but *in relation to a parent which is (relatively) positioned*.
   * If there is no such parent (like a relatively positioned element is not its
   * parent but a sibling), width is set *in relation to body*.
   * XXX: Therefore, *make sure to relatively position a common parent*, not a
   * sibling.
   * In this case relatively position its direct parent i.e. .dropdown for
   * min-width percents to be in relation to the .dropdown.
   * */
  min-width: 100%;
}
.dropdown.is-open .dropdown__drawer {
  display: block;
}
